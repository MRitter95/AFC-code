%This script takes the HISTDATA array generated by superFindEchoes.m when
%run on echo data. 
load('newHistograms.mat')

%I'm hard-coding the sequence of tooth spacings used, but if necessary
%in future this can instead be pulled from the freqs.txt file
freqs= linspace(0.1,20,200)*1e6;
echoSpacing= 1./freqs;

% make mxn subplot array
m= 5;
n= 2;

%we'll create a list of the best trace for each comb
bestTrace= zeros(200,1);
biggest= 0;
%for each tooth spacing:
for k=1:length(histData)
    figure(floor((k-1)/m/n)+1)
    subplot(m,n,1+mod(k-1,m*n))
    title(strcat(num2str(k/10),' MHz spacing: (',num2str(10/k),...
        '\mus between echoes)'));
    hold on
    
    %collect all traces
    blah= histData{k};
    largestEcho= 0;
    largestTrace= 0;
    %for each trace:
    for j=1:length(blah)
        meh= blah{j};
        plot(meh(:,2),meh(:,1),'-o');
        
        %sort the peaks by arrival time:
        meh= sortrows(meh,2);
        %remove the first one (transmission peak):
        meh(1,:)= [];
        %sort by magnitude again:
        meh= sortrows(meh,1);
        
        if max(meh(:,1))>largestEcho
            largestTrace= j;
            largestEcho= max(meh(:,1));
            biggest= max(biggest,largestEcho);
        end
    end
    
    bestTrace(k)= largestTrace;
end

%now we go through the best traces, and produce an intensity map:
map= zeros(200);

for j=1:200
    %pull up all data for this tooth spacing
    blah= histData{j};
    %for some tooth spacings there is no echo, so no best trace. we'll just
    %use the first trace arbitrarily.
    if bestTrace(j)==0
        disp(strcat(num2str(j/10),'MHz is a problem'));
        bestTrace(j)=1;
    end
    data= blah{bestTrace(j)};
    %use the transmission peak as a reference to shift the time axis;
    %again remove the first peak
    data= sortrows(data,2);
    data(:,2)= data(:,2)- data(1,2);
    data(1,:)= [];
    
    times= data(:,2)*1e6;
    invTimes= round(10./times);
    mags= data(:,1)/biggest;
    map(invTimes,j)= mags;
end
map= map(1:66,:);

figure(100)
plot(max(map))
xticks(linspace(0,200,21))
xticklabels(linspace(0,20,21))

figure(101)
imshow(1-flipud(map));
axis on
pbaspect([1 1 1]);
set(gca,'TickDir','out');
xticks(linspace(0,200,11));
xticklabels(linspace(0,20,11));
yticks([7,27,47]);
yticklabels([6,4,2]);
hline(43);
hline(19);

figure(102)
plot(0.1:0.1:6.6,sum(flipud(map),2));
vline((66-24+1)/10);
vline((66-48+1)/10);
%     echoPower= histData{k}(:,1);
%     echoPower= echoPower/max(echoPower);
%     echoTime= histData{k}(:,2);
%            
% 
%     
%     % histogram of max echo magnitude in traces of given tooth spacing
%     subplot(m,n,1+mod(2*k-2,m*n))
%     histogram(echoPower,linspace(0,1,11),...
%         'FaceColor',[0.8500, 0.3250, 0.0980]);
%     xlim([0,1]);
%     
%     
% %     %histogram of arrival times of largest echo in traces of given spacing
% %     subplot(m,n,1+mod(3*k-2,m*n))
% %     h= histogram(echoTime);
% %     title(strcat(num2str(k/10),...
% %         ' MHz spacing: ', num2str(10/k),...
% %         ' \mus between echoes'))
% %     if diff(xlim)>50e-9
% %         set(h,'FaceColor',[0.85,0.325,0.098]);
% %     end
% %     xt= xticks;
% %     xticklabels(xt-xt(1));
%     
%     %plot of echo magnitude and arrival time vs. trace number
%     subplot(m,n,1+mod(2*k-1,m*n))
%     %
%     yyaxis right
%     plot(echoPower,'o','LineWidth',2);
%     ylim([0,1])
%     %
%     yyaxis left
%     plot(echoTime,'o','LineWidth',2);
%     ticks= fliplr(max(echoTime):-echoSpacing(k):0);
%     yticks(ticks);
%     yticklabels([]);
%     
%     ax= gca;
%     ax.YGrid= 'on';  
%     ax.GridAlpha= 0.4;
%     title(strcat(num2str(k/10),' MHz spacing'))
